let g:ale_completion_enabled = 1

call plug#begin('~/.dotfiles/vim/plugged')
Plug 'git://github.com/junegunn/vim-easy-align.git'
Plug 'git://github.com/junegunn/vim-github-dashboard.git'
Plug 'git://github.com/scrooloose/nerdtree.git'
Plug 'git://github.com/dracula/vim.git'
Plug 'git://github.com/airblade/vim-gitgutter.git'
Plug 'git://github.com/itchyny/lightline.vim.git'
Plug 'git://github.com/ararslan/llvm.vim.git'
Plug 'git://github.com/ntpeters/vim-better-whitespace.git'
Plug 'git://github.com/sheerun/vim-polyglot.git'
Plug 'git://github.com/tmux-plugins/vim-tmux.git'
Plug 'git://github.com/tmux-plugins/vim-tmux-focus-events.git'
Plug 'git://github.com/christoomey/vim-tmux-navigator.git'
Plug 'git://github.com/terryma/vim-multiple-cursors.git'
Plug 'git://github.com/scrooloose/nerdcommenter'
Plug 'git://github.com/SirVer/ultisnips.git'
Plug 'git://github.com/honza/vim-snippets.git'
Plug 'git://github.com/Xuyuanp/nerdtree-git-plugin.git'
Plug 'git://github.com/terryma/vim-multiple-cursors.git'
Plug 'git://github.com/tpope/vim-fugitive.git'
Plug 'git://github.com/ctrlpvim/ctrlp.vim.git'
Plug 'git://github.com/vim-scripts/matchit.zip.git'
Plug 'git://github.com/ryanoasis/vim-devicons.git'
Plug 'git://github.com/thaerkh/vim-workspace.git'
Plug 'git://github.com/majutsushi/tagbar.git'
Plug 'git://github.com/shime/vim-livedown.git'
Plug 'git://github.com/w0rp/ale.git'
Plug 'crusoexia/vim-monokai', { 'as': 'monokai' }
Plug 'embear/vim-localvimrc'
Plug 'junegunn/fzf', { 'dir': '~/.dotfiles/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
call plug#end()

let $LANG = 'en'

syntax on
filetype plugin on
colorscheme monokai
set laststatus=2
set noshowmode
set updatetime=100
map <C-o> :NERDTreeToggle<CR>
nnoremap <C-p> :Files<Cr>
let g:gitgutter_grep=''
map <C-g> :GitGutterToggle<CR>
let g:indent_guides_enable_on_vim_startup = 1
let g:better_whitespace_enabled=1
set expandtab
set tabstop=4
set shiftwidth=4
set softtabstop=4
let g:indentLine_setConceal = 0
set colorcolumn=80
highlight ColorColumn ctermbg=darkgray

set nolazyredraw
" Performance improvments
if has("mac")
  set nocursorline

  if exists("+relativenumber")
    set norelativenumber
  endif

  set foldlevel=0
  set foldmethod=manual
endif

map ; :Files<CR>
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" General
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" set UTF-8 encoding
set enc=utf-8
set fenc=utf-8
set termencoding=utf-8
set history=5000 " How many lines of history to remember
set undolevels=5000
set cf " enable error files and error jumping
set ffs=unix,dos,mac " support all three, in this order
set viminfo+=! " make sure it can save viminfo
set isk+=_,$,@,%,# " none of these should be word dividers, so make them not be
set nosol " leave my cursor where it was
" yank to clipboard
if has("clipboard")
  set clipboard=unnamed " copy to the system clipboard

  if has("unnamedplus") " X11 support
    set clipboard+=unnamedplus
  endif
endif
nnoremap j gj
nnoremap k gk
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l
set pastetoggle=<F2>
nnoremap <leader>s :ToggleWorkspace<CR>
nmap <C-t> :TagbarToggle<CR>
nnoremap <leader>q :bp<cr>:bd #<cr>
" global enable spell check
"set spell spelllang=en_us   " spell check go to highlighted word and "z=" to see list to turn off set nospell
setlocal spell spelllang=ru,en
autocmd BufRead,BufNewFile *.md,*.txt,*.tex setlocal spell  " enable spell check for certain files

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Files/Backups/Sessions
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set nobackup
set nowb
set noswapfile
set directory=~/.vim/temp " directory for temp files
set makeef=error.err " When using make, where should it dump the file
set sessionoptions+=globals " What should be saved during sessions being saved
set sessionoptions+=localoptions " What should be saved during sessions being saved
set sessionoptions+=resize " What should be saved during sessions being saved
set sessionoptions+=winpos " What should be saved during sessions being saved

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Vim UI
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set lsp=0 " space it out a little more (easier to read)
set wildmenu " turn on wild menu
set wildmode=list:longest " turn on wild menu in special format (long format)
set wildignore=*.dll,*.o,*.obj,*.bak,*.exe,*.pyc,*.swp,*.jpg,*.gif,*.png " ignore formats
set ruler " Always show current positions along the bottom
set cmdheight=1 " the command bar is 1 high
set number " turn on line numbers
set lz " do not redraw while running macros (much faster) (LazyRedraw)
set hid " you can change buffer without saving
set backspace=2 " make backspace work normal
set whichwrap+=<,>,h,l  " backspace and cursor keys wrap to
set shortmess=atI " shortens messages to avoid 'press a key' prompt
set report=0 " tell us when anything is changed via :...
set noerrorbells " don't make noise
set list " we do what to show tabs, to ensure we get them out of my files
set listchars=tab:>-,trail:- " show tabs and trailing whitespace

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Visual Cues
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set showmatch " show matching brackets
set mat=5 " how many tenths of a second to blink matching brackets for
set nohlsearch " highlight search
set incsearch " BUT do highlight as you type you search phrase
set so=5 " Keep 5 lines (top/bottom) for scope
set novisualbell " don't blink

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Indent Related
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set ai " autoindent (filetype indenting instead)
set nosi " smartindent (filetype indenting instead)
set cindent " do c-style indenting
set softtabstop=4 " unify
set shiftwidth=4 " unify
set tabstop=4 " real tabs should be 4, but they will show with set list on
set copyindent " but above all -- follow the conventions laid before us
" wrap lines at 120 chars. 80 is somewhat antiquated with nowadays displays.
set textwidth=120
filetype plugin indent on " load filetype plugins and indent settings

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Text Formatting/Layout
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set fo=tcrq " See Help (complex)
set shiftround " when at 3 spaces, and I hit > ... go to 4, not 5
set expandtab " no real tabs!
set nowrap " do not wrap line
set preserveindent " but above all -- follow the conventions laid before us
set ignorecase " case insensitive by default
set smartcase " if there are caps, go case-sensitive
set completeopt=menu,longest,preview " improve the way autocomplete works
set cursorcolumn " show the current column
set cursorline

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Folding
"    Enable folding, but by default make it act like folding is
"    off, because folding is annoying in anything but a few rare
"    cases
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set foldenable " Turn on folding
set foldmarker={,} " Fold C style code
set foldmethod=marker " Fold on the marker
set foldlevel=100 " Don't autofold anything (but I can still fold manually)
set foldopen-=search " don't open folds when you search into them
set foldopen-=undo " don't open folds when you undo stuff

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Custom Functions
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Select range, then hit :SuperRetab($width) - by p0g and FallingCow
function! SuperRetab(width) range
    silent! exe a:firstline . ',' . a:lastline . 's/\v%(^ *)@<= {'. a:width .'}/\t/g'
endfunction

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Autocommands
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
au BufRead,BufNewFile *.cl set syntax=cpp

" Yank text to the macOS clipboard
noremap <leader>y "*y
noremap <leader>yy "*Y

" Preserve indentation while pasting text from the macOS clipboard
noremap <leader>p :set paste<CR>:put  *<CR>:set nopaste<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Code quality
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:ale_sign_column_always = 1
let g:ale_sign_error = '>'
let g:ale_sign_warning = '?'
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-y>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"
